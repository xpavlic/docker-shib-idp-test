idp.authn.oidc.rp.provider.proxyIssuer=https://oidc.muni.cz/oidc/
## If discovery is required, these default properties will not be set, you must manage per OP using overrides
idp.authn.oidc.rp.client.clientId = 2d7d2d95-815c-476c-9a04-f5050dab8823
idp.authn.oidc.rp.client.clientSecret= 0bb30328-6935-4427-bb83-606bb98d0cf4cc795b80-2232-4dba-ae33-1d4ebc3b4d54
idp.authn.oidc.rp.client.redirecturl.allowedOrigins = https://ip-78-128-251-22.flt.cloud.muni.cz

## If true and the token was retrieved using TLS with server validation, JWS signature checking will be skipped.
#idp.authn.oidc.rp.client.idtoken.tlsServerValidationOnly = false

## Should a further lookup to the UserInfo endpoint be made, to retrieve additional claims about the end-user
#idp.authn.oidc.rp.client.userinfo.enabled = true
#idp.authn.oidc.rp.client.userinfo.httpRequestMethod = GET

## The HTTP method use to send the authorization request
#idp.authn.oidc.rp.httpRequestMethod = GET
## Override the default response_mode for the given response_type
#idp.authn.oidc.rp.client.responseMode = query
## Client authentication method.
#idp.authn.oidc.rp.client.authenticationMethod = client_secret_basic
#idp.authn.oidc.rp.client.authenticationMethod.jwt.expiryOffset = PT30S
## Comma seperated list of additional scopes e.g. profile or email. The openid scope is added by default
idp.authn.oidc.rp.client.scopes = openid,profile,email

#idp.authn.oidc.rp.addDefaultPrincipals = false
#idp.authn.oidc.rp.supportedPrincipals =  \
#    saml2/urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport, \
#    saml2/urn:oasis:names:tc:SAML:2.0:ac:classes:Password, \
#    saml1/urn:oasis:names:tc:SAML:1.0:am:password

## IDToken JWT verification properties
#idp.authn.oidc.rp.client.idtoken.jwt.verifier.clockSkew = PT60S
#idp.authn.oidc.rp.client.idtoken.jwt.verifier.authnLifetime = PT60S
## General JWT verification properties
#idp.authn.oidc.rp.client.jwt.verifier.clockSkew = PT1M

## Should validation be skipped if the at_hash is not present in the id_token response. Defaults to 'true' as
## access token at_hash validation is optional in the Authorization Code Flow.
#idp.authn.oidc.rp.client.tokenresponse.allowMissingAtHash = true

## External controller path. Should not need changing.
#idp.authn.oidc.rp.externalAuthnPath = /Authn/OIDC/RP

## Inbuilt C14N options for converting a Subject Identifier into a principal name
idp.authn.oidc.rp.c14n.subjectidentifier.lowercase = false
idp.authn.oidc.rp.c14n.subjectidentifier.uppercase = false
idp.authn.oidc.rp.c14n.subjectidentifier.trim = true
idp.authn.oidc.rp.c14n.subjectidentifier.disabled = true

## Properties to control discovery. Note, there is currently no default discovery implementation
#idp.authn.oidc.rp.provider.discoveryRequired=false
#idp.authn.oidc.rp.discoveryURL=http://opdisco.com

### Properties below are common to both RP and OP (if installed).

## The OP's keyset document fetch interval i.e. how long should keys from the OP be cached.
#idp.oidc.provider.keyfetch.interval = PT30M

## Enable PKCE for the authorization code flow
#idp.oidc.forcePKCE = false
#idp.oidc.allowPKCEPlain = false

## Whether to use a request object to send authentication parameters, and if it should be encrypted and or signed.
#idp.oidc.requestobject.used= false
#idp.oidc.requestobject.encrypted = false
#idp.oidc.requestobject.signed = true

## Signing and encryption/decryption keys for request objects, id tokens, and userinfo response
#idp.signing.oidc.rs.key = %{idp.home}/credentials/idp-signing-rs.jwk
#idp.signing.oidc.es.key = %{idp.home}/credentials/idp-signing-es.jwk
#idp.signing.oidc.rsa.enc.key = %{idp.home}/credentials/idp-encryption-rsa.jwk

## Properties to control the authentication flow
#idp.authn.oidc.rp.order = 1000
#idp.authn.oidc.rp.nonBrowserSupported = false
#idp.authn.oidc.rp.passiveAuthenticationSupported = true
#idp.authn.oidc.rp.forcedAuthenticationSupported = true
