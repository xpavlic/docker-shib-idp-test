<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    This file is an EXAMPLE policy file.  While the policy presented in this 
    example file is illustrative of some simple cases, it relies on the names of
    non-existent example services and the example attributes demonstrated in the
    default attribute-resolver.xml file.

    This example does contain some usable "general purpose" policies that may be
    useful in conjunction with specific deployment choices, but those policies may
    not be applicable to your specific needs or constraints.    
-->
<AttributeFilterPolicyGroup id="ShibbolethFilterPolicy" xmlns="urn:mace:shibboleth:2.0:afp"
                            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                            xmlns:oidc="urn:mace:shibboleth:2.0:afp:oidc"
                            xsi:schemaLocation="urn:mace:shibboleth:2.0:afp http://shibboleth.net/schema/idp/shibboleth-afp.xsd
                        urn:mace:shibboleth:2.0:afp:oidc http://shibboleth.net/schema/oidc/shibboleth-afp-oidc.xsd">

    <!--
    Example rule relying on a locally applied tag in metadata to trigger attribute
    release of some specific attributes. Add additional attributes as desired.
    -->
<!--
	<AttributeFilterPolicy id="Per-Attribute-singleValued">
	    <PolicyRequirementRule xsi:type="ANY" />
	 
	    <AttributeRule attributeID="eduPersonPrincipalName">
	        <PermitValueRule xsi:type="EntityAttributeExactMatch"
	            attributeName="http://shibboleth.net/ns/attributes/releaseAllValues"
	            attributeNameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:uri"
	            attributeValue="eduPersonPrincipalName" />
	    </AttributeRule>
	 
	    <AttributeRule attributeID="mail">
	        <PermitValueRule xsi:type="EntityAttributeExactMatch"
	            attributeName="http://shibboleth.net/ns/attributes/releaseAllValues"
	            attributeNameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:uri"
	            attributeValue="mail" />
	    </AttributeRule>
	</AttributeFilterPolicy>
-->

    <!--
    Same as above but more efficient form for an attribute with multiple values.
    -->
<!--
    <AttributeFilterPolicy id="Per-Attribute-Affiliation">
        <PolicyRequirementRule xsi:type="EntityAttributeExactMatch"
            attributeName="http://shibboleth.net/ns/attributes/releaseAllValues"
            attributeNameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:uri"
            attributeValue="eduPersonScopedAffiliation" />
     
        <AttributeRule attributeID="eduPersonScopedAffiliation" permitAny="true" />
    </AttributeFilterPolicy>
-->

    <!--
    Example rule for honoring Subject ID requirement tag in metadata.
    The example supplies pairwise-id if subject-id isn't explicitly required.
    -->
<!--
    <AttributeFilterPolicy id="subject-identifiers">
        <PolicyRequirementRule xsi:type="ANY" />

        <AttributeRule attributeID="samlPairwiseID">
            <PermitValueRule xsi:type="OR">
                <Rule xsi:type="EntityAttributeExactMatch"
                    attributeName="urn:oasis:names:tc:SAML:profiles:subject-id:req"
                    attributeNameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:uri"
                    attributeValue="pairwise-id" />
                <Rule xsi:type="EntityAttributeExactMatch"
                    attributeName="urn:oasis:names:tc:SAML:profiles:subject-id:req"
                    attributeNameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:uri"
                    attributeValue="any" />
            </PermitValueRule>
        </AttributeRule>

        <AttributeRule attributeID="samlSubjectID">
            <PermitValueRule xsi:type="EntityAttributeExactMatch"
                attributeName="urn:oasis:names:tc:SAML:profiles:subject-id:req"
                attributeNameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:uri"
                attributeValue="subject-id" />
        </AttributeRule>
    </AttributeFilterPolicy>
-->

    <!-- Release an additional attribute to an SP. -->
<!--
    <AttributeFilterPolicy id="example1">
        <PolicyRequirementRule xsi:type="Requester" value="https://sp.example.org" />

        <AttributeRule attributeID="uid" permitAny="true" />
    </AttributeFilterPolicy>
-->

    <!-- Release eduPersonScopedAffiliation to two specific SPs. -->
<!--
    <AttributeFilterPolicy id="example2">
        <PolicyRequirementRule xsi:type="OR">
            <Rule xsi:type="Requester" value="https://sp.example.org" />
            <Rule xsi:type="Requester" value="https://another.example.org/shibboleth" />
        </PolicyRequirementRule>
        <AttributeRule attributeID="eduPersonScopedAffiliation" permitAny="true" />
    </AttributeFilterPolicy>
-->

    <!-- Attribute release for all SPs (global) tagged as 'Research and Scholarship' -->
    <AttributeFilterPolicy id="releaseRandSAttributeBundle">
        <PolicyRequirementRule xsi:type="EntityAttributeExactMatch"
                        attributeName="http://macedir.org/entity-category"
                        attributeValue="http://refeds.org/category/research-and-scholarship"/>
        <AttributeRule attributeID="eduPersonPrincipalName">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="eduPersonScopedAffiliation">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="givenName">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="surname">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="displayName">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="mail">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
    </AttributeFilterPolicy>

    <!-- Attribute release for all InCommon SPs -->
    <AttributeFilterPolicy id="releaseToInCommon">
        <PolicyRequirementRule xsi:type="EntityAttributeExactMatch"
                        attributeName="http://macedir.org/entity-category"
                        attributeValue="http://id.incommon.org/category/registered-by-incommon"/>
        <AttributeRule attributeID="eduPersonPrincipalName">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="eduPersonScopedAffiliation">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="givenName">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="surname">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="displayName">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="mail">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
    </AttributeFilterPolicy>

    <!-- the test SP container -->
    <AttributeFilterPolicy id="SPtest">
        <PolicyRequirementRule xsi:type="Requester" value="https://ip-78-128-251-22.flt.cloud.muni.cz:8443/shibboleth" />
        <AttributeRule attributeID="eduPersonPrincipalName">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="mail">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="givenName">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="surname">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
    </AttributeFilterPolicy>
    <!-- end of test SP container -->

    <AttributeFilterPolicy id="OPENID_SCOPE">
        <PolicyRequirementRule xsi:type="oidc:OIDCScope" value="openid" />
        <!-- May adjust to taste depending on strategy used to produce sub claim. -->
        <AttributeRule attributeID="sub">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
    </AttributeFilterPolicy>

    <!--
    This demonstrates how subject is set with "plain" OAuth authorization sequences, i.e. when 'openid'
    scope is not involved.
    -->
    <AttributeFilterPolicy id="OAUTH_SUBJECT">
        <PolicyRequirementRule xsi:type="AND">
            <Rule xsi:type="NOT">
                <Rule xsi:type="oidc:OIDCScope" value="openid" />
            </Rule>
            <Rule xsi:type="Profile" value="http://shibboleth.net/ns/profiles/oidc/sso/browser" />
        </PolicyRequirementRule>
        <AttributeRule attributeID="sub">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
    </AttributeFilterPolicy>

    <!--
    This demonstrates a rule that releases email claims in response to requests having the 'email' scope.
    The requester needs to have that as a registered scope.
    -->
    <AttributeFilterPolicy id="OPENID_SCOPE_EMAIL">
        <PolicyRequirementRule xsi:type="oidc:OIDCScope" value="email" />
        <AttributeRule attributeID="mail">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="email_verified">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
    </AttributeFilterPolicy>

    <!--
    This demonstrates a rule that releases address claim in response to requests having the 'address' scope.
    The requester needs to have that as a registered scope.
    -->
    <AttributeFilterPolicy id="OPENID_SCOPE_ADDRESS">
        <PolicyRequirementRule xsi:type="oidc:OIDCScope" value="address" />
        <AttributeRule attributeID="address">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
    </AttributeFilterPolicy>

    <!--
    This demonstrates a rule that releases phone claims in response to requests having the 'phone' scope.
    The requester needs to have that as a registered scope.
    -->
    <AttributeFilterPolicy id="OPENID_SCOPE_PHONE">
        <PolicyRequirementRule xsi:type="oidc:OIDCScope" value="phone" />
        <AttributeRule attributeID="telephoneNumber">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="phone_number_verified">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
    </AttributeFilterPolicy>

    <!--
    This demonstrates a rule that releases profile claims in response to requests having the 'profile' scope.
    The requester needs to have that as a registered scope.
    -->
    <AttributeFilterPolicy id="OPENID_SCOPE_PROFILE">
        <PolicyRequirementRule xsi:type="oidc:OIDCScope" value="profile" />
        <AttributeRule attributeID="displayName">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="sn">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="givenName">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="preferredLanguage">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="eduPersonNickname">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="uid">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="middle_name">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="profile">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="picture">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="website">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="gender">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="birthdate">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="zoneinfo">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="updated_at">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
    </AttributeFilterPolicy>


    <!-- Example rules for honoring requested claims and splitting claims between ID and UserInfo tokens. -->

    <AttributeFilterPolicy id="REQUESTED_CLAIMS">
        <PolicyRequirementRule xsi:type="ANY" />
        <!-- Release picture if asked. -->
        <AttributeRule attributeID="picture">
            <PermitValueRule xsi:type="oidc:AttributeInOIDCRequestedClaims" />
        </AttributeRule>
        <!-- Release email in ID token if specifically asked for in ID token. -->
        <AttributeRule attributeID="mail">
            <PermitValueRule xsi:type="oidc:AttributeInOIDCRequestedClaims" matchOnlyIDToken="true" />
        </AttributeRule>
        <!-- Release phone_number in UserInfo token if specifically asked for in UserInfo token. -->
        <AttributeRule attributeID="telephoneNumber">
            <PermitValueRule xsi:type="oidc:AttributeInOIDCRequestedClaims" matchOnlyUserInfo="true" />
        </AttributeRule>
        <!-- Release name if specifically asked for in UserInfo token and flagged as essential. -->
        <AttributeRule attributeID="displayName">
            <PermitValueRule xsi:type="oidc:AttributeInOIDCRequestedClaims" matchOnlyUserInfo="true"
                             onlyIfEssential="true" />
        </AttributeRule>
    </AttributeFilterPolicy>

</AttributeFilterPolicyGroup>
